#!/bin/bash

# Git pre-push hook
# プッシュ前により厳密なチェックを実行します

set -e

# カラー出力用の設定
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Running pre-push checks...${NC}"

# 1. すべてのテストを実行（FORCE_COLOR=1で）
echo -e "\n${YELLOW}Running all tests...${NC}"
TEST_OUTPUT=$(FORCE_COLOR=1 bun test 2>&1)
if echo "$TEST_OUTPUT" | grep -q "fail"; then
    echo -e "${RED}✗ Tests failed${NC}"
    echo "$TEST_OUTPUT" | grep -E "(fail|error)" | head -10
    exit 1
fi
PASS_COUNT=$(echo "$TEST_OUTPUT" | grep -oE "[0-9]+ pass" | grep -oE "[0-9]+" | head -1)
echo -e "${GREEN}✓ All tests passed ($PASS_COUNT tests)${NC}"

# 2. ビルドチェック
echo -e "\n${YELLOW}Building project...${NC}"
if ! bun run build > /dev/null 2>&1; then
    echo -e "${RED}✗ Build failed${NC}"
    exit 1
fi
echo -e "${GREEN}✓ Build succeeded${NC}"

# 3. ディストリビューションファイルの存在確認
echo -e "\n${YELLOW}Checking distribution files...${NC}"
if [ ! -f "dist/colorize.js" ]; then
    echo -e "${RED}✗ Distribution file not found${NC}"
    echo "Please run: bun run build"
    exit 1
fi
echo -e "${GREEN}✓ Distribution files exist${NC}"

# 4. package.jsonのバージョンチェック
echo -e "\n${YELLOW}Checking package version...${NC}"
PACKAGE_VERSION=$(grep '"version"' package.json | sed -E 's/.*"version": "(.+)".*/\1/')
LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
echo "Current version: $PACKAGE_VERSION"
echo "Last git tag: $LAST_TAG"

# 5. READMEの同期確認
echo -e "\n${YELLOW}Checking README synchronization...${NC}"
if [ -f "scripts/sync-readme.sh" ]; then
    if ! bash scripts/sync-readme.sh; then
        echo -e "${RED}✗ README files are not in sync${NC}"
        exit 1
    fi
fi

echo -e "\n${GREEN}All pre-push checks passed! 🚀${NC}"
echo -e "${BLUE}Ready to push to remote repository${NC}"